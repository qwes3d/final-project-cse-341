{
  "openapi": "3.0.0",
  "info": {
    "title": "CampusConnect API",
    "version": "1.0.0",
    "description": "REST API for managing users, clubs, posts, and events in CampusConnect."
  },
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string" },
          "role": { "type": "string", "enum": ["student", "admin", "faculty"] }
        }
      },
      "Club": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "category": { "type": "string" },
          "founded": { "type": "string", "format": "date" },
          "president": { "type": "string" }
        }
      },
      "Post": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "content": { "type": "string" },
          "author": { "type": "string" },
          "club": { "type": "string" }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "date": { "type": "string", "format": "date" },
          "location": { "type": "string" },
          "club": { "type": "string" }
        }
      }
    }
  },
  "paths": {
    "/users/register": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/User" } }
          }
        },
        "responses": {
          "201": { "description": "User registered successfully" }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Login user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/User" } }
          }
        },
        "responses": {
          "200": { "description": "User logged in and JWT returned" }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of users" }
        }
      },
      "post": {
        "summary": "Create a user",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/User" } }
          }
        },
        "responses": {
          "201": { "description": "User created" }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "in": "path", "name": "id", "required": true, "schema": { "type": "string" } }],
        "responses": { "200": { "description": "User object" } }
      },
      "put": {
        "summary": "Update user",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "in": "path", "name": "id", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/User" } }
          }
        },
        "responses": { "200": { "description": "User updated" } }
      },
      "delete": {
        "summary": "Delete user",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "in": "path", "name": "id", "required": true, "schema": { "type": "string" } }],
        "responses": { "200": { "description": "User deleted" } }
      }
    },
    "/clubs": {
      "get": {
        "summary": "Get all clubs",
        "security": [{ "bearerAuth": [] }],
        "responses": { "200": { "description": "List of clubs" } }
      },
      "post": {
        "summary": "Create a new club",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/Club" } }
          }
        },
        "responses": { "201": { "description": "Club created" } }
      }
    },
    "/clubs/{id}": {
      "get": {
        "summary": "Get club by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "in": "path", "name": "id", "required": true, "schema": { "type": "string" } }],
        "responses": { "200": { "description": "Club object" } }
      },
      "put": {
        "summary": "Update club",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "in": "path", "name": "id", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/Club" } }
          }
        },
        "responses": { "200": { "description": "Club updated" } }
      },
      "delete": {
        "summary": "Delete club",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "in": "path", "name": "id", "required": true, "schema": { "type": "string" } }],
        "responses": { "200": { "description": "Club deleted" } }
      }
    },
    "/posts": {
      "get": {
        "summary": "Get all posts",
        "security": [{ "bearerAuth": [] }],
        "responses": { "200": { "description": "List of posts" } }
      },
      "post": {
        "summary": "Create a new post",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/Post" } }
          }
        },
        "responses": { "201": { "description": "Post created" } }
      }
    },
    "/posts/{id}": {
      "get": {
        "summary": "Get post by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "in": "path", "name": "id", "required": true, "schema": { "type": "string" } }],
        "responses": { "200": { "description": "Post object" } }
      },
      "put": {
        "summary": "Update post",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "in": "path", "name": "id", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/Post" } }
          }
        },
        "responses": { "200": { "description": "Post updated" } }
      },
      "delete": {
        "summary": "Delete post",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "in": "path", "name": "id", "required": true, "schema": { "type": "string" } }],
        "responses": { "200": { "description": "Post deleted" } }
      }
    },
    "/events": {
      "get": {
        "summary": "Get all events",
        "security": [{ "bearerAuth": [] }],
        "responses": { "200": { "description": "List of events" } }
      },
      "post": {
        "summary": "Create a new event",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/Event" } }
          }
        },
        "responses": { "201": { "description": "Event created" } }
      }
    },
    "/events/{id}": {
      "get": {
        "summary": "Get event by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "in": "path", "name": "id", "required": true, "schema": { "type": "string" } }],
        "responses": { "200": { "description": "Event object" } }
      },
      "put": {
        "summary": "Update event",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "in": "path", "name": "id", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/Event" } }
          }
        },
        "responses": { "200": { "description": "Event updated" } }
      },
      "delete": {
        "summary": "Delete event",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "in": "path", "name": "id", "required": true, "schema": { "type": "string" } }],
        "responses": { "200": { "description": "Event deleted" } }
      }
    }
  }
}
